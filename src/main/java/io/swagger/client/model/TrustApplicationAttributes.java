/*
 * Unit Python SDK
 * An API for testing openapi-python-client for unit-sdk
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ApplicationStatus;
import io.swagger.client.model.Grantor;
import io.swagger.client.model.Revocability;
import io.swagger.client.model.SourceOfFunds;
import io.swagger.client.model.Tags;
import io.swagger.client.model.TrustContact;
import io.swagger.client.model.Trustee;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;
/**
 * TrustApplicationAttributes
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-26T12:59:56.018830800+03:00[Asia/Jerusalem]")
public class TrustApplicationAttributes {
  @SerializedName("createdAt")
  private OffsetDateTime createdAt = null;

  @SerializedName("updatedAt")
  private OffsetDateTime updatedAt = null;

  @SerializedName("status")
  private ApplicationStatus status = null;

  @SerializedName("message")
  private String message = null;

  @SerializedName("evaluationOutcome")
  private String evaluationOutcome = null;

  @SerializedName("evaluationId")
  private String evaluationId = null;

  @SerializedName("evaluationEntityId")
  private String evaluationEntityId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("dateOfIncorporation")
  private LocalDate dateOfIncorporation = null;

  @SerializedName("stateOfIncorporation")
  private String stateOfIncorporation = null;

  @SerializedName("revocability")
  private Revocability revocability = null;

  @SerializedName("sourceOfFunds")
  private SourceOfFunds sourceOfFunds = null;

  @SerializedName("taxId")
  private String taxId = null;

  @SerializedName("contact")
  private TrustContact contact = null;

  @SerializedName("trustees")
  private List<Trustee> trustees = null;

  @SerializedName("grantor")
  private Grantor grantor = null;

  @SerializedName("ip")
  private String ip = null;

  /**
   * Gets or Sets decisionMethod
   */
  @JsonAdapter(DecisionMethodEnum.Adapter.class)
  public enum DecisionMethodEnum {
    MANUALLY("Manually"),
    AUTOMATICALLY("Automatically");

    private String value;

    DecisionMethodEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static DecisionMethodEnum fromValue(String input) {
      for (DecisionMethodEnum b : DecisionMethodEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<DecisionMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DecisionMethodEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public DecisionMethodEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return DecisionMethodEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("decisionMethod")
  private DecisionMethodEnum decisionMethod = null;

  @SerializedName("decisionUserId")
  private String decisionUserId = null;

  @SerializedName("decisionReason")
  private String decisionReason = null;

  @SerializedName("decisionDateTime")
  private OffsetDateTime decisionDateTime = null;

  @SerializedName("tags")
  private Tags tags = null;

  /**
   * Gets or Sets riskRate
   */
  @JsonAdapter(RiskRateEnum.Adapter.class)
  public enum RiskRateEnum {
    LOW("low"),
    MEDIUM("medium"),
    HIGH("high");

    private String value;

    RiskRateEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static RiskRateEnum fromValue(String input) {
      for (RiskRateEnum b : RiskRateEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<RiskRateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RiskRateEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public RiskRateEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return RiskRateEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("riskRate")
  private RiskRateEnum riskRate = null;

  @SerializedName("evaluationFlags")
  private List<String> evaluationFlags = null;

  @SerializedName("ipLocationDetails")
  private Object ipLocationDetails = null;

  @SerializedName("phoneLocationDetails")
  private Object phoneLocationDetails = null;

  @SerializedName("archived")
  private Boolean archived = null;

  public TrustApplicationAttributes createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public TrustApplicationAttributes updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public TrustApplicationAttributes status(ApplicationStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(required = true, description = "")
  public ApplicationStatus getStatus() {
    return status;
  }

  public void setStatus(ApplicationStatus status) {
    this.status = status;
  }

  public TrustApplicationAttributes message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @Schema(description = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public TrustApplicationAttributes evaluationOutcome(String evaluationOutcome) {
    this.evaluationOutcome = evaluationOutcome;
    return this;
  }

   /**
   * Get evaluationOutcome
   * @return evaluationOutcome
  **/
  @Schema(description = "")
  public String getEvaluationOutcome() {
    return evaluationOutcome;
  }

  public void setEvaluationOutcome(String evaluationOutcome) {
    this.evaluationOutcome = evaluationOutcome;
  }

  public TrustApplicationAttributes evaluationId(String evaluationId) {
    this.evaluationId = evaluationId;
    return this;
  }

   /**
   * Get evaluationId
   * @return evaluationId
  **/
  @Schema(description = "")
  public String getEvaluationId() {
    return evaluationId;
  }

  public void setEvaluationId(String evaluationId) {
    this.evaluationId = evaluationId;
  }

  public TrustApplicationAttributes evaluationEntityId(String evaluationEntityId) {
    this.evaluationEntityId = evaluationEntityId;
    return this;
  }

   /**
   * Get evaluationEntityId
   * @return evaluationEntityId
  **/
  @Schema(description = "")
  public String getEvaluationEntityId() {
    return evaluationEntityId;
  }

  public void setEvaluationEntityId(String evaluationEntityId) {
    this.evaluationEntityId = evaluationEntityId;
  }

  public TrustApplicationAttributes name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TrustApplicationAttributes dateOfIncorporation(LocalDate dateOfIncorporation) {
    this.dateOfIncorporation = dateOfIncorporation;
    return this;
  }

   /**
   * Get dateOfIncorporation
   * @return dateOfIncorporation
  **/
  @Schema(description = "")
  public LocalDate getDateOfIncorporation() {
    return dateOfIncorporation;
  }

  public void setDateOfIncorporation(LocalDate dateOfIncorporation) {
    this.dateOfIncorporation = dateOfIncorporation;
  }

  public TrustApplicationAttributes stateOfIncorporation(String stateOfIncorporation) {
    this.stateOfIncorporation = stateOfIncorporation;
    return this;
  }

   /**
   * Get stateOfIncorporation
   * @return stateOfIncorporation
  **/
  @Schema(required = true, description = "")
  public String getStateOfIncorporation() {
    return stateOfIncorporation;
  }

  public void setStateOfIncorporation(String stateOfIncorporation) {
    this.stateOfIncorporation = stateOfIncorporation;
  }

  public TrustApplicationAttributes revocability(Revocability revocability) {
    this.revocability = revocability;
    return this;
  }

   /**
   * Get revocability
   * @return revocability
  **/
  @Schema(description = "")
  public Revocability getRevocability() {
    return revocability;
  }

  public void setRevocability(Revocability revocability) {
    this.revocability = revocability;
  }

  public TrustApplicationAttributes sourceOfFunds(SourceOfFunds sourceOfFunds) {
    this.sourceOfFunds = sourceOfFunds;
    return this;
  }

   /**
   * Get sourceOfFunds
   * @return sourceOfFunds
  **/
  @Schema(description = "")
  public SourceOfFunds getSourceOfFunds() {
    return sourceOfFunds;
  }

  public void setSourceOfFunds(SourceOfFunds sourceOfFunds) {
    this.sourceOfFunds = sourceOfFunds;
  }

  public TrustApplicationAttributes taxId(String taxId) {
    this.taxId = taxId;
    return this;
  }

   /**
   * Get taxId
   * @return taxId
  **/
  @Schema(description = "")
  public String getTaxId() {
    return taxId;
  }

  public void setTaxId(String taxId) {
    this.taxId = taxId;
  }

  public TrustApplicationAttributes contact(TrustContact contact) {
    this.contact = contact;
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @Schema(required = true, description = "")
  public TrustContact getContact() {
    return contact;
  }

  public void setContact(TrustContact contact) {
    this.contact = contact;
  }

  public TrustApplicationAttributes trustees(List<Trustee> trustees) {
    this.trustees = trustees;
    return this;
  }

  public TrustApplicationAttributes addTrusteesItem(Trustee trusteesItem) {
    if (this.trustees == null) {
      this.trustees = new ArrayList<Trustee>();
    }
    this.trustees.add(trusteesItem);
    return this;
  }

   /**
   * Get trustees
   * @return trustees
  **/
  @Schema(description = "")
  public List<Trustee> getTrustees() {
    return trustees;
  }

  public void setTrustees(List<Trustee> trustees) {
    this.trustees = trustees;
  }

  public TrustApplicationAttributes grantor(Grantor grantor) {
    this.grantor = grantor;
    return this;
  }

   /**
   * Get grantor
   * @return grantor
  **/
  @Schema(description = "")
  public Grantor getGrantor() {
    return grantor;
  }

  public void setGrantor(Grantor grantor) {
    this.grantor = grantor;
  }

  public TrustApplicationAttributes ip(String ip) {
    this.ip = ip;
    return this;
  }

   /**
   * Get ip
   * @return ip
  **/
  @Schema(description = "")
  public String getIp() {
    return ip;
  }

  public void setIp(String ip) {
    this.ip = ip;
  }

  public TrustApplicationAttributes decisionMethod(DecisionMethodEnum decisionMethod) {
    this.decisionMethod = decisionMethod;
    return this;
  }

   /**
   * Get decisionMethod
   * @return decisionMethod
  **/
  @Schema(description = "")
  public DecisionMethodEnum getDecisionMethod() {
    return decisionMethod;
  }

  public void setDecisionMethod(DecisionMethodEnum decisionMethod) {
    this.decisionMethod = decisionMethod;
  }

  public TrustApplicationAttributes decisionUserId(String decisionUserId) {
    this.decisionUserId = decisionUserId;
    return this;
  }

   /**
   * Get decisionUserId
   * @return decisionUserId
  **/
  @Schema(description = "")
  public String getDecisionUserId() {
    return decisionUserId;
  }

  public void setDecisionUserId(String decisionUserId) {
    this.decisionUserId = decisionUserId;
  }

  public TrustApplicationAttributes decisionReason(String decisionReason) {
    this.decisionReason = decisionReason;
    return this;
  }

   /**
   * Get decisionReason
   * @return decisionReason
  **/
  @Schema(description = "")
  public String getDecisionReason() {
    return decisionReason;
  }

  public void setDecisionReason(String decisionReason) {
    this.decisionReason = decisionReason;
  }

  public TrustApplicationAttributes decisionDateTime(OffsetDateTime decisionDateTime) {
    this.decisionDateTime = decisionDateTime;
    return this;
  }

   /**
   * Get decisionDateTime
   * @return decisionDateTime
  **/
  @Schema(description = "")
  public OffsetDateTime getDecisionDateTime() {
    return decisionDateTime;
  }

  public void setDecisionDateTime(OffsetDateTime decisionDateTime) {
    this.decisionDateTime = decisionDateTime;
  }

  public TrustApplicationAttributes tags(Tags tags) {
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public Tags getTags() {
    return tags;
  }

  public void setTags(Tags tags) {
    this.tags = tags;
  }

  public TrustApplicationAttributes riskRate(RiskRateEnum riskRate) {
    this.riskRate = riskRate;
    return this;
  }

   /**
   * Get riskRate
   * @return riskRate
  **/
  @Schema(description = "")
  public RiskRateEnum getRiskRate() {
    return riskRate;
  }

  public void setRiskRate(RiskRateEnum riskRate) {
    this.riskRate = riskRate;
  }

  public TrustApplicationAttributes evaluationFlags(List<String> evaluationFlags) {
    this.evaluationFlags = evaluationFlags;
    return this;
  }

  public TrustApplicationAttributes addEvaluationFlagsItem(String evaluationFlagsItem) {
    if (this.evaluationFlags == null) {
      this.evaluationFlags = new ArrayList<String>();
    }
    this.evaluationFlags.add(evaluationFlagsItem);
    return this;
  }

   /**
   * Get evaluationFlags
   * @return evaluationFlags
  **/
  @Schema(description = "")
  public List<String> getEvaluationFlags() {
    return evaluationFlags;
  }

  public void setEvaluationFlags(List<String> evaluationFlags) {
    this.evaluationFlags = evaluationFlags;
  }

  public TrustApplicationAttributes ipLocationDetails(Object ipLocationDetails) {
    this.ipLocationDetails = ipLocationDetails;
    return this;
  }

   /**
   * Get ipLocationDetails
   * @return ipLocationDetails
  **/
  @Schema(description = "")
  public Object getIpLocationDetails() {
    return ipLocationDetails;
  }

  public void setIpLocationDetails(Object ipLocationDetails) {
    this.ipLocationDetails = ipLocationDetails;
  }

  public TrustApplicationAttributes phoneLocationDetails(Object phoneLocationDetails) {
    this.phoneLocationDetails = phoneLocationDetails;
    return this;
  }

   /**
   * Get phoneLocationDetails
   * @return phoneLocationDetails
  **/
  @Schema(description = "")
  public Object getPhoneLocationDetails() {
    return phoneLocationDetails;
  }

  public void setPhoneLocationDetails(Object phoneLocationDetails) {
    this.phoneLocationDetails = phoneLocationDetails;
  }

  public TrustApplicationAttributes archived(Boolean archived) {
    this.archived = archived;
    return this;
  }

   /**
   * Get archived
   * @return archived
  **/
  @Schema(description = "")
  public Boolean isArchived() {
    return archived;
  }

  public void setArchived(Boolean archived) {
    this.archived = archived;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrustApplicationAttributes trustApplicationAttributes = (TrustApplicationAttributes) o;
    return Objects.equals(this.createdAt, trustApplicationAttributes.createdAt) &&
        Objects.equals(this.updatedAt, trustApplicationAttributes.updatedAt) &&
        Objects.equals(this.status, trustApplicationAttributes.status) &&
        Objects.equals(this.message, trustApplicationAttributes.message) &&
        Objects.equals(this.evaluationOutcome, trustApplicationAttributes.evaluationOutcome) &&
        Objects.equals(this.evaluationId, trustApplicationAttributes.evaluationId) &&
        Objects.equals(this.evaluationEntityId, trustApplicationAttributes.evaluationEntityId) &&
        Objects.equals(this.name, trustApplicationAttributes.name) &&
        Objects.equals(this.dateOfIncorporation, trustApplicationAttributes.dateOfIncorporation) &&
        Objects.equals(this.stateOfIncorporation, trustApplicationAttributes.stateOfIncorporation) &&
        Objects.equals(this.revocability, trustApplicationAttributes.revocability) &&
        Objects.equals(this.sourceOfFunds, trustApplicationAttributes.sourceOfFunds) &&
        Objects.equals(this.taxId, trustApplicationAttributes.taxId) &&
        Objects.equals(this.contact, trustApplicationAttributes.contact) &&
        Objects.equals(this.trustees, trustApplicationAttributes.trustees) &&
        Objects.equals(this.grantor, trustApplicationAttributes.grantor) &&
        Objects.equals(this.ip, trustApplicationAttributes.ip) &&
        Objects.equals(this.decisionMethod, trustApplicationAttributes.decisionMethod) &&
        Objects.equals(this.decisionUserId, trustApplicationAttributes.decisionUserId) &&
        Objects.equals(this.decisionReason, trustApplicationAttributes.decisionReason) &&
        Objects.equals(this.decisionDateTime, trustApplicationAttributes.decisionDateTime) &&
        Objects.equals(this.tags, trustApplicationAttributes.tags) &&
        Objects.equals(this.riskRate, trustApplicationAttributes.riskRate) &&
        Objects.equals(this.evaluationFlags, trustApplicationAttributes.evaluationFlags) &&
        Objects.equals(this.ipLocationDetails, trustApplicationAttributes.ipLocationDetails) &&
        Objects.equals(this.phoneLocationDetails, trustApplicationAttributes.phoneLocationDetails) &&
        Objects.equals(this.archived, trustApplicationAttributes.archived);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, updatedAt, status, message, evaluationOutcome, evaluationId, evaluationEntityId, name, dateOfIncorporation, stateOfIncorporation, revocability, sourceOfFunds, taxId, contact, trustees, grantor, ip, decisionMethod, decisionUserId, decisionReason, decisionDateTime, tags, riskRate, evaluationFlags, ipLocationDetails, phoneLocationDetails, archived);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrustApplicationAttributes {\n");
    
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    evaluationOutcome: ").append(toIndentedString(evaluationOutcome)).append("\n");
    sb.append("    evaluationId: ").append(toIndentedString(evaluationId)).append("\n");
    sb.append("    evaluationEntityId: ").append(toIndentedString(evaluationEntityId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    dateOfIncorporation: ").append(toIndentedString(dateOfIncorporation)).append("\n");
    sb.append("    stateOfIncorporation: ").append(toIndentedString(stateOfIncorporation)).append("\n");
    sb.append("    revocability: ").append(toIndentedString(revocability)).append("\n");
    sb.append("    sourceOfFunds: ").append(toIndentedString(sourceOfFunds)).append("\n");
    sb.append("    taxId: ").append(toIndentedString(taxId)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    trustees: ").append(toIndentedString(trustees)).append("\n");
    sb.append("    grantor: ").append(toIndentedString(grantor)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    decisionMethod: ").append(toIndentedString(decisionMethod)).append("\n");
    sb.append("    decisionUserId: ").append(toIndentedString(decisionUserId)).append("\n");
    sb.append("    decisionReason: ").append(toIndentedString(decisionReason)).append("\n");
    sb.append("    decisionDateTime: ").append(toIndentedString(decisionDateTime)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    riskRate: ").append(toIndentedString(riskRate)).append("\n");
    sb.append("    evaluationFlags: ").append(toIndentedString(evaluationFlags)).append("\n");
    sb.append("    ipLocationDetails: ").append(toIndentedString(ipLocationDetails)).append("\n");
    sb.append("    phoneLocationDetails: ").append(toIndentedString(phoneLocationDetails)).append("\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
