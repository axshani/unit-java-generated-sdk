/*
 * Unit Python SDK
 * An API for testing openapi-python-client for unit-sdk
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Address;
import io.swagger.client.model.BeneficialOwner1;
import io.swagger.client.model.Contact;
import io.swagger.client.model.DeviceFingerprint;
import io.swagger.client.model.Industry;
import io.swagger.client.model.Officer1;
import io.swagger.client.model.Phone;
import io.swagger.client.model.Tags;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;
/**
 * CreateBusinessApplicationAttributes
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-26T12:59:56.018830800+03:00[Asia/Jerusalem]")
public class CreateBusinessApplicationAttributes {
  @SerializedName("name")
  private String name = null;

  @SerializedName("dba")
  private String dba = null;

  @SerializedName("ein")
  private String ein = null;

  /**
   * Gets or Sets entityType
   */
  @JsonAdapter(EntityTypeEnum.Adapter.class)
  public enum EntityTypeEnum {
    CORPORATION("Corporation"),
    LLC("LLC"),
    PARTNERSHIP("Partnership");

    private String value;

    EntityTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static EntityTypeEnum fromValue(String input) {
      for (EntityTypeEnum b : EntityTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<EntityTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EntityTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public EntityTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return EntityTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("entityType")
  private EntityTypeEnum entityType = null;

  @SerializedName("dateOfIncorporation")
  private LocalDate dateOfIncorporation = null;

  @SerializedName("stateOfIncorporation")
  private String stateOfIncorporation = null;

  @SerializedName("purpose")
  private String purpose = null;

  @SerializedName("phone")
  private Phone phone = null;

  @SerializedName("address")
  private Address address = null;

  @SerializedName("contact")
  private Contact contact = null;

  @SerializedName("officer")
  private Officer1 officer = null;

  @SerializedName("ip")
  private OneOfCreateBusinessApplicationAttributesIp ip = null;

  @SerializedName("website")
  private String website = null;

  @SerializedName("beneficialOwners")
  private List<BeneficialOwner1> beneficialOwners = new ArrayList<BeneficialOwner1>();

  @SerializedName("tags")
  private Tags tags = null;

  @SerializedName("idempotencyKey")
  private String idempotencyKey = null;

  @SerializedName("deviceFingerprints")
  private List<DeviceFingerprint> deviceFingerprints = null;

  @SerializedName("industry")
  private Industry industry = null;

  public CreateBusinessApplicationAttributes name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CreateBusinessApplicationAttributes dba(String dba) {
    this.dba = dba;
    return this;
  }

   /**
   * Get dba
   * @return dba
  **/
  @Schema(description = "")
  public String getDba() {
    return dba;
  }

  public void setDba(String dba) {
    this.dba = dba;
  }

  public CreateBusinessApplicationAttributes ein(String ein) {
    this.ein = ein;
    return this;
  }

   /**
   * Get ein
   * @return ein
  **/
  @Schema(required = true, description = "")
  public String getEin() {
    return ein;
  }

  public void setEin(String ein) {
    this.ein = ein;
  }

  public CreateBusinessApplicationAttributes entityType(EntityTypeEnum entityType) {
    this.entityType = entityType;
    return this;
  }

   /**
   * Get entityType
   * @return entityType
  **/
  @Schema(required = true, description = "")
  public EntityTypeEnum getEntityType() {
    return entityType;
  }

  public void setEntityType(EntityTypeEnum entityType) {
    this.entityType = entityType;
  }

  public CreateBusinessApplicationAttributes dateOfIncorporation(LocalDate dateOfIncorporation) {
    this.dateOfIncorporation = dateOfIncorporation;
    return this;
  }

   /**
   * Get dateOfIncorporation
   * @return dateOfIncorporation
  **/
  @Schema(description = "")
  public LocalDate getDateOfIncorporation() {
    return dateOfIncorporation;
  }

  public void setDateOfIncorporation(LocalDate dateOfIncorporation) {
    this.dateOfIncorporation = dateOfIncorporation;
  }

  public CreateBusinessApplicationAttributes stateOfIncorporation(String stateOfIncorporation) {
    this.stateOfIncorporation = stateOfIncorporation;
    return this;
  }

   /**
   * Get stateOfIncorporation
   * @return stateOfIncorporation
  **/
  @Schema(required = true, description = "")
  public String getStateOfIncorporation() {
    return stateOfIncorporation;
  }

  public void setStateOfIncorporation(String stateOfIncorporation) {
    this.stateOfIncorporation = stateOfIncorporation;
  }

  public CreateBusinessApplicationAttributes purpose(String purpose) {
    this.purpose = purpose;
    return this;
  }

   /**
   * Get purpose
   * @return purpose
  **/
  @Schema(description = "")
  public String getPurpose() {
    return purpose;
  }

  public void setPurpose(String purpose) {
    this.purpose = purpose;
  }

  public CreateBusinessApplicationAttributes phone(Phone phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @Schema(required = true, description = "")
  public Phone getPhone() {
    return phone;
  }

  public void setPhone(Phone phone) {
    this.phone = phone;
  }

  public CreateBusinessApplicationAttributes address(Address address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(required = true, description = "")
  public Address getAddress() {
    return address;
  }

  public void setAddress(Address address) {
    this.address = address;
  }

  public CreateBusinessApplicationAttributes contact(Contact contact) {
    this.contact = contact;
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @Schema(required = true, description = "")
  public Contact getContact() {
    return contact;
  }

  public void setContact(Contact contact) {
    this.contact = contact;
  }

  public CreateBusinessApplicationAttributes officer(Officer1 officer) {
    this.officer = officer;
    return this;
  }

   /**
   * Get officer
   * @return officer
  **/
  @Schema(required = true, description = "")
  public Officer1 getOfficer() {
    return officer;
  }

  public void setOfficer(Officer1 officer) {
    this.officer = officer;
  }

  public CreateBusinessApplicationAttributes ip(OneOfCreateBusinessApplicationAttributesIp ip) {
    this.ip = ip;
    return this;
  }

   /**
   * Get ip
   * @return ip
  **/
  @Schema(description = "")
  public OneOfCreateBusinessApplicationAttributesIp getIp() {
    return ip;
  }

  public void setIp(OneOfCreateBusinessApplicationAttributesIp ip) {
    this.ip = ip;
  }

  public CreateBusinessApplicationAttributes website(String website) {
    this.website = website;
    return this;
  }

   /**
   * Get website
   * @return website
  **/
  @Schema(description = "")
  public String getWebsite() {
    return website;
  }

  public void setWebsite(String website) {
    this.website = website;
  }

  public CreateBusinessApplicationAttributes beneficialOwners(List<BeneficialOwner1> beneficialOwners) {
    this.beneficialOwners = beneficialOwners;
    return this;
  }

  public CreateBusinessApplicationAttributes addBeneficialOwnersItem(BeneficialOwner1 beneficialOwnersItem) {
    this.beneficialOwners.add(beneficialOwnersItem);
    return this;
  }

   /**
   * Get beneficialOwners
   * @return beneficialOwners
  **/
  @Schema(required = true, description = "")
  public List<BeneficialOwner1> getBeneficialOwners() {
    return beneficialOwners;
  }

  public void setBeneficialOwners(List<BeneficialOwner1> beneficialOwners) {
    this.beneficialOwners = beneficialOwners;
  }

  public CreateBusinessApplicationAttributes tags(Tags tags) {
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public Tags getTags() {
    return tags;
  }

  public void setTags(Tags tags) {
    this.tags = tags;
  }

  public CreateBusinessApplicationAttributes idempotencyKey(String idempotencyKey) {
    this.idempotencyKey = idempotencyKey;
    return this;
  }

   /**
   * Get idempotencyKey
   * @return idempotencyKey
  **/
  @Schema(description = "")
  public String getIdempotencyKey() {
    return idempotencyKey;
  }

  public void setIdempotencyKey(String idempotencyKey) {
    this.idempotencyKey = idempotencyKey;
  }

  public CreateBusinessApplicationAttributes deviceFingerprints(List<DeviceFingerprint> deviceFingerprints) {
    this.deviceFingerprints = deviceFingerprints;
    return this;
  }

  public CreateBusinessApplicationAttributes addDeviceFingerprintsItem(DeviceFingerprint deviceFingerprintsItem) {
    if (this.deviceFingerprints == null) {
      this.deviceFingerprints = new ArrayList<DeviceFingerprint>();
    }
    this.deviceFingerprints.add(deviceFingerprintsItem);
    return this;
  }

   /**
   * Get deviceFingerprints
   * @return deviceFingerprints
  **/
  @Schema(description = "")
  public List<DeviceFingerprint> getDeviceFingerprints() {
    return deviceFingerprints;
  }

  public void setDeviceFingerprints(List<DeviceFingerprint> deviceFingerprints) {
    this.deviceFingerprints = deviceFingerprints;
  }

  public CreateBusinessApplicationAttributes industry(Industry industry) {
    this.industry = industry;
    return this;
  }

   /**
   * Get industry
   * @return industry
  **/
  @Schema(description = "")
  public Industry getIndustry() {
    return industry;
  }

  public void setIndustry(Industry industry) {
    this.industry = industry;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateBusinessApplicationAttributes createBusinessApplicationAttributes = (CreateBusinessApplicationAttributes) o;
    return Objects.equals(this.name, createBusinessApplicationAttributes.name) &&
        Objects.equals(this.dba, createBusinessApplicationAttributes.dba) &&
        Objects.equals(this.ein, createBusinessApplicationAttributes.ein) &&
        Objects.equals(this.entityType, createBusinessApplicationAttributes.entityType) &&
        Objects.equals(this.dateOfIncorporation, createBusinessApplicationAttributes.dateOfIncorporation) &&
        Objects.equals(this.stateOfIncorporation, createBusinessApplicationAttributes.stateOfIncorporation) &&
        Objects.equals(this.purpose, createBusinessApplicationAttributes.purpose) &&
        Objects.equals(this.phone, createBusinessApplicationAttributes.phone) &&
        Objects.equals(this.address, createBusinessApplicationAttributes.address) &&
        Objects.equals(this.contact, createBusinessApplicationAttributes.contact) &&
        Objects.equals(this.officer, createBusinessApplicationAttributes.officer) &&
        Objects.equals(this.ip, createBusinessApplicationAttributes.ip) &&
        Objects.equals(this.website, createBusinessApplicationAttributes.website) &&
        Objects.equals(this.beneficialOwners, createBusinessApplicationAttributes.beneficialOwners) &&
        Objects.equals(this.tags, createBusinessApplicationAttributes.tags) &&
        Objects.equals(this.idempotencyKey, createBusinessApplicationAttributes.idempotencyKey) &&
        Objects.equals(this.deviceFingerprints, createBusinessApplicationAttributes.deviceFingerprints) &&
        Objects.equals(this.industry, createBusinessApplicationAttributes.industry);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, dba, ein, entityType, dateOfIncorporation, stateOfIncorporation, purpose, phone, address, contact, officer, ip, website, beneficialOwners, tags, idempotencyKey, deviceFingerprints, industry);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateBusinessApplicationAttributes {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    dba: ").append(toIndentedString(dba)).append("\n");
    sb.append("    ein: ").append(toIndentedString(ein)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    dateOfIncorporation: ").append(toIndentedString(dateOfIncorporation)).append("\n");
    sb.append("    stateOfIncorporation: ").append(toIndentedString(stateOfIncorporation)).append("\n");
    sb.append("    purpose: ").append(toIndentedString(purpose)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    officer: ").append(toIndentedString(officer)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("    beneficialOwners: ").append(toIndentedString(beneficialOwners)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    idempotencyKey: ").append(toIndentedString(idempotencyKey)).append("\n");
    sb.append("    deviceFingerprints: ").append(toIndentedString(deviceFingerprints)).append("\n");
    sb.append("    industry: ").append(toIndentedString(industry)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
