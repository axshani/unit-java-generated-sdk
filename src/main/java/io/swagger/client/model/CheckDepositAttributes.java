/*
 * Unit Python SDK
 * An API for testing openapi-python-client for unit-sdk
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Counterparty2;
import io.swagger.client.model.StatusEvent;
import io.swagger.client.model.Tags;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;
/**
 * CheckDepositAttributes
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-26T12:59:56.018830800+03:00[Asia/Jerusalem]")
public class CheckDepositAttributes {
  @SerializedName("createdAt")
  private OffsetDateTime createdAt = null;

  @SerializedName("settlementDate")
  private LocalDate settlementDate = null;

  @SerializedName("amount")
  private Integer amount = null;

  @SerializedName("description")
  private String description = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    AWAITINGIMAGES("AwaitingImages"),
    AWAITINGFRONTIMAGE("AwaitingFrontImage"),
    AWAITINGBACKIMAGE("AwaitingBackImage"),
    PENDING("Pending"),
    PENDINGREVIEW("PendingReview"),
    AWAITINGCUSTOMERCONFIRMATION("AwaitingCustomerConfirmation"),
    REJECTED("Rejected"),
    CLEARING("Clearing"),
    SENT("Sent"),
    CANCELED("Canceled"),
    RETURNED("Returned");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("reason")
  private String reason = null;

  @SerializedName("statusCreatedAt")
  private OffsetDateTime statusCreatedAt = null;

  @SerializedName("statusSetBy")
  private String statusSetBy = null;

  @SerializedName("statusHistory")
  private List<StatusEvent> statusHistory = null;

  @SerializedName("reasonText")
  private String reasonText = null;

  @SerializedName("checkNumber")
  private String checkNumber = null;

  @SerializedName("vendor")
  private String vendor = null;

  @SerializedName("counterparty")
  private Counterparty2 counterparty = null;

  @SerializedName("tags")
  private Tags tags = null;

  public CheckDepositAttributes createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public CheckDepositAttributes settlementDate(LocalDate settlementDate) {
    this.settlementDate = settlementDate;
    return this;
  }

   /**
   * Get settlementDate
   * @return settlementDate
  **/
  @Schema(description = "")
  public LocalDate getSettlementDate() {
    return settlementDate;
  }

  public void setSettlementDate(LocalDate settlementDate) {
    this.settlementDate = settlementDate;
  }

  public CheckDepositAttributes amount(Integer amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * minimum: 1
   * @return amount
  **/
  @Schema(required = true, description = "")
  public Integer getAmount() {
    return amount;
  }

  public void setAmount(Integer amount) {
    this.amount = amount;
  }

  public CheckDepositAttributes description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(required = true, description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CheckDepositAttributes status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(required = true, description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public CheckDepositAttributes reason(String reason) {
    this.reason = reason;
    return this;
  }

   /**
   * Get reason
   * @return reason
  **/
  @Schema(description = "")
  public String getReason() {
    return reason;
  }

  public void setReason(String reason) {
    this.reason = reason;
  }

  public CheckDepositAttributes statusCreatedAt(OffsetDateTime statusCreatedAt) {
    this.statusCreatedAt = statusCreatedAt;
    return this;
  }

   /**
   * Get statusCreatedAt
   * @return statusCreatedAt
  **/
  @Schema(description = "")
  public OffsetDateTime getStatusCreatedAt() {
    return statusCreatedAt;
  }

  public void setStatusCreatedAt(OffsetDateTime statusCreatedAt) {
    this.statusCreatedAt = statusCreatedAt;
  }

  public CheckDepositAttributes statusSetBy(String statusSetBy) {
    this.statusSetBy = statusSetBy;
    return this;
  }

   /**
   * Get statusSetBy
   * @return statusSetBy
  **/
  @Schema(description = "")
  public String getStatusSetBy() {
    return statusSetBy;
  }

  public void setStatusSetBy(String statusSetBy) {
    this.statusSetBy = statusSetBy;
  }

  public CheckDepositAttributes statusHistory(List<StatusEvent> statusHistory) {
    this.statusHistory = statusHistory;
    return this;
  }

  public CheckDepositAttributes addStatusHistoryItem(StatusEvent statusHistoryItem) {
    if (this.statusHistory == null) {
      this.statusHistory = new ArrayList<StatusEvent>();
    }
    this.statusHistory.add(statusHistoryItem);
    return this;
  }

   /**
   * Get statusHistory
   * @return statusHistory
  **/
  @Schema(description = "")
  public List<StatusEvent> getStatusHistory() {
    return statusHistory;
  }

  public void setStatusHistory(List<StatusEvent> statusHistory) {
    this.statusHistory = statusHistory;
  }

  public CheckDepositAttributes reasonText(String reasonText) {
    this.reasonText = reasonText;
    return this;
  }

   /**
   * Get reasonText
   * @return reasonText
  **/
  @Schema(description = "")
  public String getReasonText() {
    return reasonText;
  }

  public void setReasonText(String reasonText) {
    this.reasonText = reasonText;
  }

  public CheckDepositAttributes checkNumber(String checkNumber) {
    this.checkNumber = checkNumber;
    return this;
  }

   /**
   * Get checkNumber
   * @return checkNumber
  **/
  @Schema(description = "")
  public String getCheckNumber() {
    return checkNumber;
  }

  public void setCheckNumber(String checkNumber) {
    this.checkNumber = checkNumber;
  }

  public CheckDepositAttributes vendor(String vendor) {
    this.vendor = vendor;
    return this;
  }

   /**
   * Get vendor
   * @return vendor
  **/
  @Schema(description = "")
  public String getVendor() {
    return vendor;
  }

  public void setVendor(String vendor) {
    this.vendor = vendor;
  }

  public CheckDepositAttributes counterparty(Counterparty2 counterparty) {
    this.counterparty = counterparty;
    return this;
  }

   /**
   * Get counterparty
   * @return counterparty
  **/
  @Schema(description = "")
  public Counterparty2 getCounterparty() {
    return counterparty;
  }

  public void setCounterparty(Counterparty2 counterparty) {
    this.counterparty = counterparty;
  }

  public CheckDepositAttributes tags(Tags tags) {
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public Tags getTags() {
    return tags;
  }

  public void setTags(Tags tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CheckDepositAttributes checkDepositAttributes = (CheckDepositAttributes) o;
    return Objects.equals(this.createdAt, checkDepositAttributes.createdAt) &&
        Objects.equals(this.settlementDate, checkDepositAttributes.settlementDate) &&
        Objects.equals(this.amount, checkDepositAttributes.amount) &&
        Objects.equals(this.description, checkDepositAttributes.description) &&
        Objects.equals(this.status, checkDepositAttributes.status) &&
        Objects.equals(this.reason, checkDepositAttributes.reason) &&
        Objects.equals(this.statusCreatedAt, checkDepositAttributes.statusCreatedAt) &&
        Objects.equals(this.statusSetBy, checkDepositAttributes.statusSetBy) &&
        Objects.equals(this.statusHistory, checkDepositAttributes.statusHistory) &&
        Objects.equals(this.reasonText, checkDepositAttributes.reasonText) &&
        Objects.equals(this.checkNumber, checkDepositAttributes.checkNumber) &&
        Objects.equals(this.vendor, checkDepositAttributes.vendor) &&
        Objects.equals(this.counterparty, checkDepositAttributes.counterparty) &&
        Objects.equals(this.tags, checkDepositAttributes.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, settlementDate, amount, description, status, reason, statusCreatedAt, statusSetBy, statusHistory, reasonText, checkNumber, vendor, counterparty, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CheckDepositAttributes {\n");
    
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    settlementDate: ").append(toIndentedString(settlementDate)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    statusCreatedAt: ").append(toIndentedString(statusCreatedAt)).append("\n");
    sb.append("    statusSetBy: ").append(toIndentedString(statusSetBy)).append("\n");
    sb.append("    statusHistory: ").append(toIndentedString(statusHistory)).append("\n");
    sb.append("    reasonText: ").append(toIndentedString(reasonText)).append("\n");
    sb.append("    checkNumber: ").append(toIndentedString(checkNumber)).append("\n");
    sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
    sb.append("    counterparty: ").append(toIndentedString(counterparty)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
