/*
 * Unit Python SDK
 * An API for testing openapi-python-client for unit-sdk
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Phone;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * CreateCustomerTokenVerificationAttributes
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-26T12:59:56.018830800+03:00[Asia/Jerusalem]")
public class CreateCustomerTokenVerificationAttributes {
  /**
   * Gets or Sets channel
   */
  @JsonAdapter(ChannelEnum.Adapter.class)
  public enum ChannelEnum {
    SMS("sms"),
    CALL("call");

    private String value;

    ChannelEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ChannelEnum fromValue(String input) {
      for (ChannelEnum b : ChannelEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ChannelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ChannelEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ChannelEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ChannelEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("channel")
  private ChannelEnum channel = null;

  @SerializedName("phone")
  private Phone phone = null;

  @SerializedName("appHash")
  private String appHash = null;

  /**
   * Gets or Sets language
   */
  @JsonAdapter(LanguageEnum.Adapter.class)
  public enum LanguageEnum {
    EN("en"),
    AF("af"),
    AR("ar"),
    CA("ca"),
    ZH("zh"),
    ZH_CN("zh-CN"),
    ZH_HK("zh-HK"),
    HR("hr"),
    CS("cs"),
    DA("da"),
    NL("nl"),
    EN_GB("en-GB"),
    ET("et"),
    FI("fi"),
    FR("fr"),
    DE("de"),
    EL("el"),
    HE("he"),
    HI("hi"),
    HU("hu"),
    ID("id"),
    IT("it"),
    JA("ja"),
    KN("kn"),
    KO("ko"),
    MS("ms"),
    MR("mr"),
    NB("nb"),
    PL("pl"),
    PT_BR("pt-BR"),
    PT("pt"),
    RO("ro"),
    RU("ru"),
    SK("sk"),
    ES("es"),
    SV("sv"),
    TL("tl"),
    TE("te"),
    TH("th"),
    TR("tr"),
    VI("vi");

    private String value;

    LanguageEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static LanguageEnum fromValue(String input) {
      for (LanguageEnum b : LanguageEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<LanguageEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LanguageEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public LanguageEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return LanguageEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("language")
  private LanguageEnum language = null;

  public CreateCustomerTokenVerificationAttributes channel(ChannelEnum channel) {
    this.channel = channel;
    return this;
  }

   /**
   * Get channel
   * @return channel
  **/
  @Schema(required = true, description = "")
  public ChannelEnum getChannel() {
    return channel;
  }

  public void setChannel(ChannelEnum channel) {
    this.channel = channel;
  }

  public CreateCustomerTokenVerificationAttributes phone(Phone phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @Schema(description = "")
  public Phone getPhone() {
    return phone;
  }

  public void setPhone(Phone phone) {
    this.phone = phone;
  }

  public CreateCustomerTokenVerificationAttributes appHash(String appHash) {
    this.appHash = appHash;
    return this;
  }

   /**
   * Get appHash
   * @return appHash
  **/
  @Schema(description = "")
  public String getAppHash() {
    return appHash;
  }

  public void setAppHash(String appHash) {
    this.appHash = appHash;
  }

  public CreateCustomerTokenVerificationAttributes language(LanguageEnum language) {
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @Schema(description = "")
  public LanguageEnum getLanguage() {
    return language;
  }

  public void setLanguage(LanguageEnum language) {
    this.language = language;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCustomerTokenVerificationAttributes createCustomerTokenVerificationAttributes = (CreateCustomerTokenVerificationAttributes) o;
    return Objects.equals(this.channel, createCustomerTokenVerificationAttributes.channel) &&
        Objects.equals(this.phone, createCustomerTokenVerificationAttributes.phone) &&
        Objects.equals(this.appHash, createCustomerTokenVerificationAttributes.appHash) &&
        Objects.equals(this.language, createCustomerTokenVerificationAttributes.language);
  }

  @Override
  public int hashCode() {
    return Objects.hash(channel, phone, appHash, language);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCustomerTokenVerificationAttributes {\n");
    
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    appHash: ").append(toIndentedString(appHash)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
