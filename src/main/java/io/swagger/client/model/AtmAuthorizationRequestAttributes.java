/*
 * Unit Python SDK
 * An API for testing openapi-python-client for unit-sdk
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Tags;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * AtmAuthorizationRequestAttributes
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-26T12:59:56.018830800+03:00[Asia/Jerusalem]")
public class AtmAuthorizationRequestAttributes {
  @SerializedName("createdAt")
  private OffsetDateTime createdAt = null;

  @SerializedName("amount")
  private Integer amount = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("partialApprovalAllowed")
  private Boolean partialApprovalAllowed = null;

  @SerializedName("approvedAmount")
  private Integer approvedAmount = null;

  @SerializedName("declineReason")
  private String declineReason = null;

  @SerializedName("direction")
  private String direction = null;

  @SerializedName("atmName")
  private String atmName = null;

  @SerializedName("atmLocation")
  private String atmLocation = null;

  @SerializedName("surcharge")
  private Integer surcharge = null;

  @SerializedName("internationalServiceFee")
  private OneOfAtmAuthorizationRequestAttributesInternationalServiceFee internationalServiceFee = null;

  @SerializedName("tags")
  private Tags tags = null;

  @SerializedName("cardNetwork")
  private String cardNetwork = null;

  public AtmAuthorizationRequestAttributes createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public AtmAuthorizationRequestAttributes amount(Integer amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @Schema(required = true, description = "")
  public Integer getAmount() {
    return amount;
  }

  public void setAmount(Integer amount) {
    this.amount = amount;
  }

  public AtmAuthorizationRequestAttributes status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(required = true, description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public AtmAuthorizationRequestAttributes partialApprovalAllowed(Boolean partialApprovalAllowed) {
    this.partialApprovalAllowed = partialApprovalAllowed;
    return this;
  }

   /**
   * Get partialApprovalAllowed
   * @return partialApprovalAllowed
  **/
  @Schema(required = true, description = "")
  public Boolean isPartialApprovalAllowed() {
    return partialApprovalAllowed;
  }

  public void setPartialApprovalAllowed(Boolean partialApprovalAllowed) {
    this.partialApprovalAllowed = partialApprovalAllowed;
  }

  public AtmAuthorizationRequestAttributes approvedAmount(Integer approvedAmount) {
    this.approvedAmount = approvedAmount;
    return this;
  }

   /**
   * Get approvedAmount
   * @return approvedAmount
  **/
  @Schema(description = "")
  public Integer getApprovedAmount() {
    return approvedAmount;
  }

  public void setApprovedAmount(Integer approvedAmount) {
    this.approvedAmount = approvedAmount;
  }

  public AtmAuthorizationRequestAttributes declineReason(String declineReason) {
    this.declineReason = declineReason;
    return this;
  }

   /**
   * Get declineReason
   * @return declineReason
  **/
  @Schema(description = "")
  public String getDeclineReason() {
    return declineReason;
  }

  public void setDeclineReason(String declineReason) {
    this.declineReason = declineReason;
  }

  public AtmAuthorizationRequestAttributes direction(String direction) {
    this.direction = direction;
    return this;
  }

   /**
   * Get direction
   * @return direction
  **/
  @Schema(required = true, description = "")
  public String getDirection() {
    return direction;
  }

  public void setDirection(String direction) {
    this.direction = direction;
  }

  public AtmAuthorizationRequestAttributes atmName(String atmName) {
    this.atmName = atmName;
    return this;
  }

   /**
   * Get atmName
   * @return atmName
  **/
  @Schema(required = true, description = "")
  public String getAtmName() {
    return atmName;
  }

  public void setAtmName(String atmName) {
    this.atmName = atmName;
  }

  public AtmAuthorizationRequestAttributes atmLocation(String atmLocation) {
    this.atmLocation = atmLocation;
    return this;
  }

   /**
   * Get atmLocation
   * @return atmLocation
  **/
  @Schema(description = "")
  public String getAtmLocation() {
    return atmLocation;
  }

  public void setAtmLocation(String atmLocation) {
    this.atmLocation = atmLocation;
  }

  public AtmAuthorizationRequestAttributes surcharge(Integer surcharge) {
    this.surcharge = surcharge;
    return this;
  }

   /**
   * Get surcharge
   * @return surcharge
  **/
  @Schema(required = true, description = "")
  public Integer getSurcharge() {
    return surcharge;
  }

  public void setSurcharge(Integer surcharge) {
    this.surcharge = surcharge;
  }

  public AtmAuthorizationRequestAttributes internationalServiceFee(OneOfAtmAuthorizationRequestAttributesInternationalServiceFee internationalServiceFee) {
    this.internationalServiceFee = internationalServiceFee;
    return this;
  }

   /**
   * Get internationalServiceFee
   * @return internationalServiceFee
  **/
  @Schema(description = "")
  public OneOfAtmAuthorizationRequestAttributesInternationalServiceFee getInternationalServiceFee() {
    return internationalServiceFee;
  }

  public void setInternationalServiceFee(OneOfAtmAuthorizationRequestAttributesInternationalServiceFee internationalServiceFee) {
    this.internationalServiceFee = internationalServiceFee;
  }

  public AtmAuthorizationRequestAttributes tags(Tags tags) {
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public Tags getTags() {
    return tags;
  }

  public void setTags(Tags tags) {
    this.tags = tags;
  }

  public AtmAuthorizationRequestAttributes cardNetwork(String cardNetwork) {
    this.cardNetwork = cardNetwork;
    return this;
  }

   /**
   * Get cardNetwork
   * @return cardNetwork
  **/
  @Schema(description = "")
  public String getCardNetwork() {
    return cardNetwork;
  }

  public void setCardNetwork(String cardNetwork) {
    this.cardNetwork = cardNetwork;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AtmAuthorizationRequestAttributes atmAuthorizationRequestAttributes = (AtmAuthorizationRequestAttributes) o;
    return Objects.equals(this.createdAt, atmAuthorizationRequestAttributes.createdAt) &&
        Objects.equals(this.amount, atmAuthorizationRequestAttributes.amount) &&
        Objects.equals(this.status, atmAuthorizationRequestAttributes.status) &&
        Objects.equals(this.partialApprovalAllowed, atmAuthorizationRequestAttributes.partialApprovalAllowed) &&
        Objects.equals(this.approvedAmount, atmAuthorizationRequestAttributes.approvedAmount) &&
        Objects.equals(this.declineReason, atmAuthorizationRequestAttributes.declineReason) &&
        Objects.equals(this.direction, atmAuthorizationRequestAttributes.direction) &&
        Objects.equals(this.atmName, atmAuthorizationRequestAttributes.atmName) &&
        Objects.equals(this.atmLocation, atmAuthorizationRequestAttributes.atmLocation) &&
        Objects.equals(this.surcharge, atmAuthorizationRequestAttributes.surcharge) &&
        Objects.equals(this.internationalServiceFee, atmAuthorizationRequestAttributes.internationalServiceFee) &&
        Objects.equals(this.tags, atmAuthorizationRequestAttributes.tags) &&
        Objects.equals(this.cardNetwork, atmAuthorizationRequestAttributes.cardNetwork);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, amount, status, partialApprovalAllowed, approvedAmount, declineReason, direction, atmName, atmLocation, surcharge, internationalServiceFee, tags, cardNetwork);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AtmAuthorizationRequestAttributes {\n");
    
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    partialApprovalAllowed: ").append(toIndentedString(partialApprovalAllowed)).append("\n");
    sb.append("    approvedAmount: ").append(toIndentedString(approvedAmount)).append("\n");
    sb.append("    declineReason: ").append(toIndentedString(declineReason)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    atmName: ").append(toIndentedString(atmName)).append("\n");
    sb.append("    atmLocation: ").append(toIndentedString(atmLocation)).append("\n");
    sb.append("    surcharge: ").append(toIndentedString(surcharge)).append("\n");
    sb.append("    internationalServiceFee: ").append(toIndentedString(internationalServiceFee)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    cardNetwork: ").append(toIndentedString(cardNetwork)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
