/*
 * Unit Python SDK
 * An API for testing openapi-python-client for unit-sdk
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * EvaluationParams
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-26T12:59:56.018830800+03:00[Asia/Jerusalem]")
public class EvaluationParams {
  /**
   * Gets or Sets useSelfieVerification
   */
  @JsonAdapter(UseSelfieVerificationEnum.Adapter.class)
  public enum UseSelfieVerificationEnum {
    NEVER("Never"),
    REPLACEIDENTIFICATION("ReplaceIdentification"),
    ALWAYS("Always");

    private String value;

    UseSelfieVerificationEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static UseSelfieVerificationEnum fromValue(String input) {
      for (UseSelfieVerificationEnum b : UseSelfieVerificationEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<UseSelfieVerificationEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final UseSelfieVerificationEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public UseSelfieVerificationEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return UseSelfieVerificationEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("useSelfieVerification")
  private UseSelfieVerificationEnum useSelfieVerification = null;

  @SerializedName("requireIdVerification")
  private Boolean requireIdVerification = false;

  public EvaluationParams useSelfieVerification(UseSelfieVerificationEnum useSelfieVerification) {
    this.useSelfieVerification = useSelfieVerification;
    return this;
  }

   /**
   * Get useSelfieVerification
   * @return useSelfieVerification
  **/
  @Schema(description = "")
  public UseSelfieVerificationEnum getUseSelfieVerification() {
    return useSelfieVerification;
  }

  public void setUseSelfieVerification(UseSelfieVerificationEnum useSelfieVerification) {
    this.useSelfieVerification = useSelfieVerification;
  }

  public EvaluationParams requireIdVerification(Boolean requireIdVerification) {
    this.requireIdVerification = requireIdVerification;
    return this;
  }

   /**
   * Get requireIdVerification
   * @return requireIdVerification
  **/
  @Schema(description = "")
  public Boolean isRequireIdVerification() {
    return requireIdVerification;
  }

  public void setRequireIdVerification(Boolean requireIdVerification) {
    this.requireIdVerification = requireIdVerification;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EvaluationParams evaluationParams = (EvaluationParams) o;
    return Objects.equals(this.useSelfieVerification, evaluationParams.useSelfieVerification) &&
        Objects.equals(this.requireIdVerification, evaluationParams.requireIdVerification);
  }

  @Override
  public int hashCode() {
    return Objects.hash(useSelfieVerification, requireIdVerification);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EvaluationParams {\n");
    
    sb.append("    useSelfieVerification: ").append(toIndentedString(useSelfieVerification)).append("\n");
    sb.append("    requireIdVerification: ").append(toIndentedString(requireIdVerification)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
