/*
 * Unit Python SDK
 * An API for testing openapi-python-client for unit-sdk
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * DepositLimitsAttributesCardLimits
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-26T12:59:56.018830800+03:00[Asia/Jerusalem]")
public class DepositLimitsAttributesCardLimits {
  @SerializedName("dailyWithdrawal")
  private BigDecimal dailyWithdrawal = null;

  @SerializedName("dailyDeposit")
  private BigDecimal dailyDeposit = null;

  @SerializedName("dailyPurchase")
  private BigDecimal dailyPurchase = null;

  @SerializedName("dailyCardTransaction")
  private BigDecimal dailyCardTransaction = null;

  public DepositLimitsAttributesCardLimits dailyWithdrawal(BigDecimal dailyWithdrawal) {
    this.dailyWithdrawal = dailyWithdrawal;
    return this;
  }

   /**
   * Get dailyWithdrawal
   * @return dailyWithdrawal
  **/
  @Schema(required = true, description = "")
  public BigDecimal getDailyWithdrawal() {
    return dailyWithdrawal;
  }

  public void setDailyWithdrawal(BigDecimal dailyWithdrawal) {
    this.dailyWithdrawal = dailyWithdrawal;
  }

  public DepositLimitsAttributesCardLimits dailyDeposit(BigDecimal dailyDeposit) {
    this.dailyDeposit = dailyDeposit;
    return this;
  }

   /**
   * Get dailyDeposit
   * @return dailyDeposit
  **/
  @Schema(required = true, description = "")
  public BigDecimal getDailyDeposit() {
    return dailyDeposit;
  }

  public void setDailyDeposit(BigDecimal dailyDeposit) {
    this.dailyDeposit = dailyDeposit;
  }

  public DepositLimitsAttributesCardLimits dailyPurchase(BigDecimal dailyPurchase) {
    this.dailyPurchase = dailyPurchase;
    return this;
  }

   /**
   * Get dailyPurchase
   * @return dailyPurchase
  **/
  @Schema(required = true, description = "")
  public BigDecimal getDailyPurchase() {
    return dailyPurchase;
  }

  public void setDailyPurchase(BigDecimal dailyPurchase) {
    this.dailyPurchase = dailyPurchase;
  }

  public DepositLimitsAttributesCardLimits dailyCardTransaction(BigDecimal dailyCardTransaction) {
    this.dailyCardTransaction = dailyCardTransaction;
    return this;
  }

   /**
   * Get dailyCardTransaction
   * @return dailyCardTransaction
  **/
  @Schema(required = true, description = "")
  public BigDecimal getDailyCardTransaction() {
    return dailyCardTransaction;
  }

  public void setDailyCardTransaction(BigDecimal dailyCardTransaction) {
    this.dailyCardTransaction = dailyCardTransaction;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DepositLimitsAttributesCardLimits depositLimitsAttributesCardLimits = (DepositLimitsAttributesCardLimits) o;
    return Objects.equals(this.dailyWithdrawal, depositLimitsAttributesCardLimits.dailyWithdrawal) &&
        Objects.equals(this.dailyDeposit, depositLimitsAttributesCardLimits.dailyDeposit) &&
        Objects.equals(this.dailyPurchase, depositLimitsAttributesCardLimits.dailyPurchase) &&
        Objects.equals(this.dailyCardTransaction, depositLimitsAttributesCardLimits.dailyCardTransaction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dailyWithdrawal, dailyDeposit, dailyPurchase, dailyCardTransaction);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DepositLimitsAttributesCardLimits {\n");
    
    sb.append("    dailyWithdrawal: ").append(toIndentedString(dailyWithdrawal)).append("\n");
    sb.append("    dailyDeposit: ").append(toIndentedString(dailyDeposit)).append("\n");
    sb.append("    dailyPurchase: ").append(toIndentedString(dailyPurchase)).append("\n");
    sb.append("    dailyCardTransaction: ").append(toIndentedString(dailyCardTransaction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
