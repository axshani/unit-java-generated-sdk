/*
 * Unit Python SDK
 * An API for testing openapi-python-client for unit-sdk
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AuthorizedUser;
import io.swagger.client.model.Revocability;
import io.swagger.client.model.SourceOfFunds;
import io.swagger.client.model.Tags;
import io.swagger.client.model.TrustContact;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * TrustCustomerAttributes
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-26T12:59:56.018830800+03:00[Asia/Jerusalem]")
public class TrustCustomerAttributes {
  @SerializedName("createdAt")
  private OffsetDateTime createdAt = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("stateOfIncorporation")
  private String stateOfIncorporation = null;

  @SerializedName("contact")
  private TrustContact contact = null;

  @SerializedName("tags")
  private Tags tags = null;

  @SerializedName("revocability")
  private Revocability revocability = null;

  @SerializedName("sourceOfFunds")
  private SourceOfFunds sourceOfFunds = null;

  @SerializedName("taxId")
  private String taxId = null;

  /**
   * Gets or Sets riskRate
   */
  @JsonAdapter(RiskRateEnum.Adapter.class)
  public enum RiskRateEnum {
    LOW("low"),
    MEDIUM("medium"),
    HIGH("high");

    private String value;

    RiskRateEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static RiskRateEnum fromValue(String input) {
      for (RiskRateEnum b : RiskRateEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<RiskRateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RiskRateEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public RiskRateEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return RiskRateEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("riskRate")
  private RiskRateEnum riskRate = null;

  @SerializedName("authorizedUsers")
  private List<AuthorizedUser> authorizedUsers = null;

  @SerializedName("status")
  private String status = null;

  /**
   * Gets or Sets archiveReason
   */
  @JsonAdapter(ArchiveReasonEnum.Adapter.class)
  public enum ArchiveReasonEnum {
    INACTIVE("Inactive"),
    FRAUDACHACTIVITY("FraudACHActivity"),
    FRAUDCARDACTIVITY("FraudCardActivity"),
    FRAUDCHECKACTIVITY("FraudCheckActivity"),
    FRAUDAPPLICATIONHISTORY("FraudApplicationHistory"),
    FRAUDACCOUNTACTIVITY("FraudAccountActivity"),
    FRAUDCLIENTIDENTIFIED("FraudClientIdentified"),
    FRAUDLINKEDTOFRAUDULENTCUSTOMER("FraudLinkedToFraudulentCustomer");

    private String value;

    ArchiveReasonEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ArchiveReasonEnum fromValue(String input) {
      for (ArchiveReasonEnum b : ArchiveReasonEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ArchiveReasonEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ArchiveReasonEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ArchiveReasonEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ArchiveReasonEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("archiveReason")
  private ArchiveReasonEnum archiveReason = null;

  public TrustCustomerAttributes createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public TrustCustomerAttributes name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TrustCustomerAttributes stateOfIncorporation(String stateOfIncorporation) {
    this.stateOfIncorporation = stateOfIncorporation;
    return this;
  }

   /**
   * Get stateOfIncorporation
   * @return stateOfIncorporation
  **/
  @Schema(required = true, description = "")
  public String getStateOfIncorporation() {
    return stateOfIncorporation;
  }

  public void setStateOfIncorporation(String stateOfIncorporation) {
    this.stateOfIncorporation = stateOfIncorporation;
  }

  public TrustCustomerAttributes contact(TrustContact contact) {
    this.contact = contact;
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @Schema(required = true, description = "")
  public TrustContact getContact() {
    return contact;
  }

  public void setContact(TrustContact contact) {
    this.contact = contact;
  }

  public TrustCustomerAttributes tags(Tags tags) {
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public Tags getTags() {
    return tags;
  }

  public void setTags(Tags tags) {
    this.tags = tags;
  }

  public TrustCustomerAttributes revocability(Revocability revocability) {
    this.revocability = revocability;
    return this;
  }

   /**
   * Get revocability
   * @return revocability
  **/
  @Schema(description = "")
  public Revocability getRevocability() {
    return revocability;
  }

  public void setRevocability(Revocability revocability) {
    this.revocability = revocability;
  }

  public TrustCustomerAttributes sourceOfFunds(SourceOfFunds sourceOfFunds) {
    this.sourceOfFunds = sourceOfFunds;
    return this;
  }

   /**
   * Get sourceOfFunds
   * @return sourceOfFunds
  **/
  @Schema(description = "")
  public SourceOfFunds getSourceOfFunds() {
    return sourceOfFunds;
  }

  public void setSourceOfFunds(SourceOfFunds sourceOfFunds) {
    this.sourceOfFunds = sourceOfFunds;
  }

  public TrustCustomerAttributes taxId(String taxId) {
    this.taxId = taxId;
    return this;
  }

   /**
   * Get taxId
   * @return taxId
  **/
  @Schema(description = "")
  public String getTaxId() {
    return taxId;
  }

  public void setTaxId(String taxId) {
    this.taxId = taxId;
  }

  public TrustCustomerAttributes riskRate(RiskRateEnum riskRate) {
    this.riskRate = riskRate;
    return this;
  }

   /**
   * Get riskRate
   * @return riskRate
  **/
  @Schema(description = "")
  public RiskRateEnum getRiskRate() {
    return riskRate;
  }

  public void setRiskRate(RiskRateEnum riskRate) {
    this.riskRate = riskRate;
  }

  public TrustCustomerAttributes authorizedUsers(List<AuthorizedUser> authorizedUsers) {
    this.authorizedUsers = authorizedUsers;
    return this;
  }

  public TrustCustomerAttributes addAuthorizedUsersItem(AuthorizedUser authorizedUsersItem) {
    if (this.authorizedUsers == null) {
      this.authorizedUsers = new ArrayList<AuthorizedUser>();
    }
    this.authorizedUsers.add(authorizedUsersItem);
    return this;
  }

   /**
   * Get authorizedUsers
   * @return authorizedUsers
  **/
  @Schema(description = "")
  public List<AuthorizedUser> getAuthorizedUsers() {
    return authorizedUsers;
  }

  public void setAuthorizedUsers(List<AuthorizedUser> authorizedUsers) {
    this.authorizedUsers = authorizedUsers;
  }

  public TrustCustomerAttributes status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(required = true, description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public TrustCustomerAttributes archiveReason(ArchiveReasonEnum archiveReason) {
    this.archiveReason = archiveReason;
    return this;
  }

   /**
   * Get archiveReason
   * @return archiveReason
  **/
  @Schema(description = "")
  public ArchiveReasonEnum getArchiveReason() {
    return archiveReason;
  }

  public void setArchiveReason(ArchiveReasonEnum archiveReason) {
    this.archiveReason = archiveReason;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrustCustomerAttributes trustCustomerAttributes = (TrustCustomerAttributes) o;
    return Objects.equals(this.createdAt, trustCustomerAttributes.createdAt) &&
        Objects.equals(this.name, trustCustomerAttributes.name) &&
        Objects.equals(this.stateOfIncorporation, trustCustomerAttributes.stateOfIncorporation) &&
        Objects.equals(this.contact, trustCustomerAttributes.contact) &&
        Objects.equals(this.tags, trustCustomerAttributes.tags) &&
        Objects.equals(this.revocability, trustCustomerAttributes.revocability) &&
        Objects.equals(this.sourceOfFunds, trustCustomerAttributes.sourceOfFunds) &&
        Objects.equals(this.taxId, trustCustomerAttributes.taxId) &&
        Objects.equals(this.riskRate, trustCustomerAttributes.riskRate) &&
        Objects.equals(this.authorizedUsers, trustCustomerAttributes.authorizedUsers) &&
        Objects.equals(this.status, trustCustomerAttributes.status) &&
        Objects.equals(this.archiveReason, trustCustomerAttributes.archiveReason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, name, stateOfIncorporation, contact, tags, revocability, sourceOfFunds, taxId, riskRate, authorizedUsers, status, archiveReason);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrustCustomerAttributes {\n");
    
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    stateOfIncorporation: ").append(toIndentedString(stateOfIncorporation)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    revocability: ").append(toIndentedString(revocability)).append("\n");
    sb.append("    sourceOfFunds: ").append(toIndentedString(sourceOfFunds)).append("\n");
    sb.append("    taxId: ").append(toIndentedString(taxId)).append("\n");
    sb.append("    riskRate: ").append(toIndentedString(riskRate)).append("\n");
    sb.append("    authorizedUsers: ").append(toIndentedString(authorizedUsers)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    archiveReason: ").append(toIndentedString(archiveReason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
