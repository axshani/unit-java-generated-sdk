/*
 * Unit Python SDK
 * An API for testing openapi-python-client for unit-sdk
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Address;
import io.swagger.client.model.BeneficialOwner1;
import io.swagger.client.model.Contact;
import io.swagger.client.model.FullName;
import io.swagger.client.model.Industry;
import io.swagger.client.model.JwtSubject;
import io.swagger.client.model.Officer1;
import io.swagger.client.model.Phone;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;
/**
 * Prefilled
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-26T12:59:56.018830800+03:00[Asia/Jerusalem]")
public class Prefilled {
  /**
   * Gets or Sets applicationType
   */
  @JsonAdapter(ApplicationTypeEnum.Adapter.class)
  public enum ApplicationTypeEnum {
    INDIVIDUAL("Individual"),
    BUSINESS("Business"),
    SOLEPROPRIETORSHIP("SoleProprietorship");

    private String value;

    ApplicationTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ApplicationTypeEnum fromValue(String input) {
      for (ApplicationTypeEnum b : ApplicationTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ApplicationTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ApplicationTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ApplicationTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ApplicationTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("applicationType")
  private ApplicationTypeEnum applicationType = null;

  @SerializedName("fullName")
  private FullName fullName = null;

  @SerializedName("ssn")
  private Object ssn = null;

  @SerializedName("passport")
  private Object passport = null;

  @SerializedName("nationality")
  private String nationality = null;

  @SerializedName("dateOfBirth")
  private LocalDate dateOfBirth = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("stateOfIncorporation")
  private String stateOfIncorporation = null;

  /**
   * Gets or Sets entityType
   */
  @JsonAdapter(EntityTypeEnum.Adapter.class)
  public enum EntityTypeEnum {
    CORPORATION("Corporation"),
    LLC("LLC"),
    PARTNERSHIP("Partnership");

    private String value;

    EntityTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static EntityTypeEnum fromValue(String input) {
      for (EntityTypeEnum b : EntityTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<EntityTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EntityTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public EntityTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return EntityTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("entityType")
  private EntityTypeEnum entityType = null;

  @SerializedName("contact")
  private Contact contact = null;

  @SerializedName("officer")
  private Officer1 officer = null;

  @SerializedName("beneficialOwners")
  private List<BeneficialOwner1> beneficialOwners = null;

  @SerializedName("website")
  private String website = null;

  @SerializedName("phone")
  private Phone phone = null;

  @SerializedName("address")
  private Address address = null;

  @SerializedName("dba")
  private String dba = null;

  @SerializedName("ein")
  private String ein = null;

  @SerializedName("jwtSubject")
  private JwtSubject jwtSubject = null;

  @SerializedName("industry")
  private Industry industry = null;

  public Prefilled applicationType(ApplicationTypeEnum applicationType) {
    this.applicationType = applicationType;
    return this;
  }

   /**
   * Get applicationType
   * @return applicationType
  **/
  @Schema(description = "")
  public ApplicationTypeEnum getApplicationType() {
    return applicationType;
  }

  public void setApplicationType(ApplicationTypeEnum applicationType) {
    this.applicationType = applicationType;
  }

  public Prefilled fullName(FullName fullName) {
    this.fullName = fullName;
    return this;
  }

   /**
   * Get fullName
   * @return fullName
  **/
  @Schema(description = "")
  public FullName getFullName() {
    return fullName;
  }

  public void setFullName(FullName fullName) {
    this.fullName = fullName;
  }

  public Prefilled ssn(Object ssn) {
    this.ssn = ssn;
    return this;
  }

   /**
   * Get ssn
   * @return ssn
  **/
  @Schema(description = "")
  public Object getSsn() {
    return ssn;
  }

  public void setSsn(Object ssn) {
    this.ssn = ssn;
  }

  public Prefilled passport(Object passport) {
    this.passport = passport;
    return this;
  }

   /**
   * Get passport
   * @return passport
  **/
  @Schema(description = "")
  public Object getPassport() {
    return passport;
  }

  public void setPassport(Object passport) {
    this.passport = passport;
  }

  public Prefilled nationality(String nationality) {
    this.nationality = nationality;
    return this;
  }

   /**
   * Get nationality
   * @return nationality
  **/
  @Schema(description = "")
  public String getNationality() {
    return nationality;
  }

  public void setNationality(String nationality) {
    this.nationality = nationality;
  }

  public Prefilled dateOfBirth(LocalDate dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * Get dateOfBirth
   * @return dateOfBirth
  **/
  @Schema(description = "")
  public LocalDate getDateOfBirth() {
    return dateOfBirth;
  }

  public void setDateOfBirth(LocalDate dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }

  public Prefilled email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @Schema(description = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public Prefilled name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Prefilled stateOfIncorporation(String stateOfIncorporation) {
    this.stateOfIncorporation = stateOfIncorporation;
    return this;
  }

   /**
   * Get stateOfIncorporation
   * @return stateOfIncorporation
  **/
  @Schema(description = "")
  public String getStateOfIncorporation() {
    return stateOfIncorporation;
  }

  public void setStateOfIncorporation(String stateOfIncorporation) {
    this.stateOfIncorporation = stateOfIncorporation;
  }

  public Prefilled entityType(EntityTypeEnum entityType) {
    this.entityType = entityType;
    return this;
  }

   /**
   * Get entityType
   * @return entityType
  **/
  @Schema(description = "")
  public EntityTypeEnum getEntityType() {
    return entityType;
  }

  public void setEntityType(EntityTypeEnum entityType) {
    this.entityType = entityType;
  }

  public Prefilled contact(Contact contact) {
    this.contact = contact;
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @Schema(description = "")
  public Contact getContact() {
    return contact;
  }

  public void setContact(Contact contact) {
    this.contact = contact;
  }

  public Prefilled officer(Officer1 officer) {
    this.officer = officer;
    return this;
  }

   /**
   * Get officer
   * @return officer
  **/
  @Schema(description = "")
  public Officer1 getOfficer() {
    return officer;
  }

  public void setOfficer(Officer1 officer) {
    this.officer = officer;
  }

  public Prefilled beneficialOwners(List<BeneficialOwner1> beneficialOwners) {
    this.beneficialOwners = beneficialOwners;
    return this;
  }

  public Prefilled addBeneficialOwnersItem(BeneficialOwner1 beneficialOwnersItem) {
    if (this.beneficialOwners == null) {
      this.beneficialOwners = new ArrayList<BeneficialOwner1>();
    }
    this.beneficialOwners.add(beneficialOwnersItem);
    return this;
  }

   /**
   * Get beneficialOwners
   * @return beneficialOwners
  **/
  @Schema(description = "")
  public List<BeneficialOwner1> getBeneficialOwners() {
    return beneficialOwners;
  }

  public void setBeneficialOwners(List<BeneficialOwner1> beneficialOwners) {
    this.beneficialOwners = beneficialOwners;
  }

  public Prefilled website(String website) {
    this.website = website;
    return this;
  }

   /**
   * Get website
   * @return website
  **/
  @Schema(description = "")
  public String getWebsite() {
    return website;
  }

  public void setWebsite(String website) {
    this.website = website;
  }

  public Prefilled phone(Phone phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @Schema(description = "")
  public Phone getPhone() {
    return phone;
  }

  public void setPhone(Phone phone) {
    this.phone = phone;
  }

  public Prefilled address(Address address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(description = "")
  public Address getAddress() {
    return address;
  }

  public void setAddress(Address address) {
    this.address = address;
  }

  public Prefilled dba(String dba) {
    this.dba = dba;
    return this;
  }

   /**
   * Get dba
   * @return dba
  **/
  @Schema(description = "")
  public String getDba() {
    return dba;
  }

  public void setDba(String dba) {
    this.dba = dba;
  }

  public Prefilled ein(String ein) {
    this.ein = ein;
    return this;
  }

   /**
   * Get ein
   * @return ein
  **/
  @Schema(description = "")
  public String getEin() {
    return ein;
  }

  public void setEin(String ein) {
    this.ein = ein;
  }

  public Prefilled jwtSubject(JwtSubject jwtSubject) {
    this.jwtSubject = jwtSubject;
    return this;
  }

   /**
   * Get jwtSubject
   * @return jwtSubject
  **/
  @Schema(description = "")
  public JwtSubject getJwtSubject() {
    return jwtSubject;
  }

  public void setJwtSubject(JwtSubject jwtSubject) {
    this.jwtSubject = jwtSubject;
  }

  public Prefilled industry(Industry industry) {
    this.industry = industry;
    return this;
  }

   /**
   * Get industry
   * @return industry
  **/
  @Schema(description = "")
  public Industry getIndustry() {
    return industry;
  }

  public void setIndustry(Industry industry) {
    this.industry = industry;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Prefilled prefilled = (Prefilled) o;
    return Objects.equals(this.applicationType, prefilled.applicationType) &&
        Objects.equals(this.fullName, prefilled.fullName) &&
        Objects.equals(this.ssn, prefilled.ssn) &&
        Objects.equals(this.passport, prefilled.passport) &&
        Objects.equals(this.nationality, prefilled.nationality) &&
        Objects.equals(this.dateOfBirth, prefilled.dateOfBirth) &&
        Objects.equals(this.email, prefilled.email) &&
        Objects.equals(this.name, prefilled.name) &&
        Objects.equals(this.stateOfIncorporation, prefilled.stateOfIncorporation) &&
        Objects.equals(this.entityType, prefilled.entityType) &&
        Objects.equals(this.contact, prefilled.contact) &&
        Objects.equals(this.officer, prefilled.officer) &&
        Objects.equals(this.beneficialOwners, prefilled.beneficialOwners) &&
        Objects.equals(this.website, prefilled.website) &&
        Objects.equals(this.phone, prefilled.phone) &&
        Objects.equals(this.address, prefilled.address) &&
        Objects.equals(this.dba, prefilled.dba) &&
        Objects.equals(this.ein, prefilled.ein) &&
        Objects.equals(this.jwtSubject, prefilled.jwtSubject) &&
        Objects.equals(this.industry, prefilled.industry);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationType, fullName, ssn, passport, nationality, dateOfBirth, email, name, stateOfIncorporation, entityType, contact, officer, beneficialOwners, website, phone, address, dba, ein, jwtSubject, industry);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Prefilled {\n");
    
    sb.append("    applicationType: ").append(toIndentedString(applicationType)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    ssn: ").append(toIndentedString(ssn)).append("\n");
    sb.append("    passport: ").append(toIndentedString(passport)).append("\n");
    sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    stateOfIncorporation: ").append(toIndentedString(stateOfIncorporation)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    officer: ").append(toIndentedString(officer)).append("\n");
    sb.append("    beneficialOwners: ").append(toIndentedString(beneficialOwners)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    dba: ").append(toIndentedString(dba)).append("\n");
    sb.append("    ein: ").append(toIndentedString(ein)).append("\n");
    sb.append("    jwtSubject: ").append(toIndentedString(jwtSubject)).append("\n");
    sb.append("    industry: ").append(toIndentedString(industry)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
